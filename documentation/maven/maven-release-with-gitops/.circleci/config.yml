# Machine executor, set the machine key to true in .circleci/config.yml:
version: 2.1
orbs:
  secrethub: secrethub/cli@1.0.0
jobs:
  mvn_release:
    machine:
      resource_class: medium
      image: 'ubuntu-1604:201903-01'    # recommended linux image - includes Ubuntu 16.04, docker 18.09.3, docker-compose 1.23.1
      # docker_layer_caching: true    # default - false # requires a Circle CI plan that includes [Docker layer caching feature]
    environment:
      DESIRED_RELEASE_TAG: 5.27.1
      JFROG_BUILD_NUMBER: 1524548
      DESIRED_MAVEN_VERSION: 3.6.3
    steps:
      - checkout
      - secrethub/install
      - run:
          name: "Git Tagging the Release, on Release Branch"
          command: |
                    echo " Release branch is [${CIRCLE_BRANCH}], and must match major/minor verions of DESIRED_RELEASE_TAG=[${DESIRED_RELEASE_TAG}]"
                    git tag ${DESIRED_RELEASE_TAG} -m "Gravitee Bot tagging release from Circle CI Pipeline"
                    git push -u origin --tags ${CIRCLE_BRANCH}
      - run:
          name: "Maven Test the Gravitee Component"
          command: |
                    echo "Run Maven Tests"
                    export MVN_DOCKER="maven:${DESIRED_MAVEN_VERSION}-openjdk-16 "
                    export MAVEN_COMMAND="mvn clean test"
                    echo "MAVEN_COMMAND=[${MAVEN_COMMAND}]"
                    docker run -it --rm -v "$PWD":/usr/src/mymaven -v "$HOME/.m2":/root/.m2 -w /usr/src/mymaven ${MVN_DOCKER} ${MAVEN_COMMAND}

      - run:
          name: "Maven Package the Gravitee Component"
          command: |
                    echo "Run Maven Package"
                    export MVN_DOCKER="maven:${DESIRED_MAVEN_VERSION}-openjdk-16 "
                    export MAVEN_COMMAND="mvn clean package"
                    echo "Run Maven Tests MAVEN_COMMAND=[${MAVEN_COMMAND}]"
                    docker run -it --rm -v "$PWD":/usr/src/mymaven -v "$HOME/.m2":/root/.m2 -w /usr/src/mymaven ${MVN_DOCKER} ${MAVEN_COMMAND}

      - run: # print the name of the branch we're on
          name: "Maven Deploy the Gravitee Component to Central Maven Repo : JFrog"
          command: |
                    echo "Run Maven Deploy using JFrog Maven Plugin"
                    export MVN_DOCKER="maven:${DESIRED_MAVEN_VERSION}-openjdk-16 "
                    #
                    # see https://github.com/jfrog/project-examples/tree/master/artifactory-maven-plugin-example
                    export JFROG_USERNAME=$(secrethub read gravitee-io/cicd/staging/jfrog/username)
                    export JFROG_SECRET=$(secrethub read gravitee-io/cicd/staging/jfrog/password)
                    echo "JFROG_USERNAME=[${JFROG_USERNAME}]"
                    # echo "JFROG_SECRET=[${JFROG_SECRET}]"
                    export JFROG_USERNAME=test
                    export JFROG_SECRET=test
                    export MAVEN_COMMAND="mvn deploy -Dusername=${JFROG_USERNAME} -Dpassword=${JFROG_SECRET} -Dbuildnumber=${JFROG_BUILD_NUMBER}"
                    echo "MAVEN_COMMAND=[${MAVEN_COMMAND}]"
                    docker run -it --rm -v "$PWD":/usr/src/mymaven -v "$HOME/.m2":/root/.m2 -w /usr/src/mymaven ${MVN_DOCKER} ${MAVEN_COMMAND}

  build:
    machine:
      resource_class: medium
      image: 'ubuntu-1604:201903-01'    # recommended linux image - includes Ubuntu 16.04, docker 18.09.3, docker-compose 1.23.1
      # docker_layer_caching: true    # default - false # requires a Circle CI plan that includes [Docker layer caching feature]
    environment:
      DESIRED_MAVEN_VERSION: 3.6.3
    steps:
      - checkout
      - secrethub/install
      - run:
          name: "Maven Package n Install the Gravitee Component"
          command: |
                    echo "Run Maven Package"
                    export MVN_DOCKER="maven:${DESIRED_MAVEN_VERSION}-openjdk-16 "
                    export MAVEN_COMMAND="mvn clean package install"
                    echo "Run Maven Tests MAVEN_COMMAND=[${MAVEN_COMMAND}]"
                    docker run -it --rm -v "$PWD":/usr/src/mymaven -v "$HOME/.m2":/root/.m2 -w /usr/src/mymaven ${MVN_DOCKER} ${MAVEN_COMMAND}

  tests_before_deployment:
    machine:
      resource_class: medium
      image: 'ubuntu-1604:201903-01'    # recommended linux image - includes Ubuntu 16.04, docker 18.09.3, docker-compose 1.23.1
      # docker_layer_caching: true    # default - false # requires a Circle CI plan that includes [Docker layer caching feature]
    environment:
      DESIRED_MAVEN_VERSION: 3.6.3
    steps:
      - checkout
      - secrethub/install
      - run:
          name: "Maven Test the Gravitee Component"
          command: |
                    echo "Run Maven Tests"
                    export MVN_DOCKER="maven:${DESIRED_MAVEN_VERSION}-openjdk-16 "
                    export MAVEN_COMMAND="mvn clean test"
                    echo "MAVEN_COMMAND=[${MAVEN_COMMAND}]"
                    docker run -it --rm -v "$PWD":/usr/src/mymaven -v "$HOME/.m2":/root/.m2 -w /usr/src/mymaven ${MVN_DOCKER} ${MAVEN_COMMAND}

workflows:
  version: 2.1
  # ---
  # Celui-lÃ  uniquement par
  # invocation de la Circle CI API pour
  # la Release Produit
  git_n_maven_release:
    jobs:
      - mvn_release:
          context: gravitee-lab
          filters:
            tags:
              # only: /^v.*/
              # will run only when on release branches
              only:
                - 1.20.x
                - 1.25.x
                - 1.30.x
                - 3.0.x
                - 3.1.x
                - /^*.x/
              # will not run on pull requests from
              #
              ignore:
                - /^fix*/
                - /^issues*/
                - /^*support/
                - /^*snyk*/
                - /^*dependabot*/
  # ---
  # Celui-lÃ  uniquement pour chaque
  # review de pull request
  #
  pull_requests_review:
    jobs:
      - build:
          context: gravitee-lab
          filters:
            branches:
              # will run only when pull request is from
              # Gravitee Dev / Support Team members
              only:
                - /^fix*/
                - /^issues*/
                - /^*support/
                # - /^*snyk*/
                # - /^*dependabot*/
              # will not run on pull requests from one
              # release branche, to another, for
              # STS / LTS support Releases
              ignore:
                - 1.20.x
                - 1.25.x
                - 1.30.x
                - 3.0.x
                - 3.1.x
                - /^*.x/
                # - /^*snyk*/
                # - /^*dependabot*/
      # Will run all tests before deployment, and then run the [deployment]
      - tests_before_deployment:
          requires:
            - build
          context: gravitee-lab
          # filters:
      - deploy_integration_env:
          # not worth spending money if unit/coverage tests did not pass
          requires:
            - tests_before_deployment
          context: gravitee-lab
          # filters:
        # ---
        # among Integration Tests :
        # => Data Storage providers tests (GRravitee works just as well, with PostgresQL, or Redis, instead of MongoDB)
        # => User Stories End 2 End Tests
      - integration_tests:
          requires:
            - deploy_integration_env
          context: gravitee-lab
          # filters:
      - deploy_staging_env:
          # not worth spending money if integration tests did not pass
          requires:
            - integration_tests
          context: gravitee-lab
          # filters:
        # ---
        # among staging tests :
        # => performance tests
        # => big database End 2 End Tests
      - staging_tests:
          requires:
            - deploy_staging_env
          context: gravitee-lab
          # filters:
